
1.	Infra Provisioning
	Cài đặt các hệ thống provisioning sau:
1.1	Center Server
	Sử dụng project vtidc-infra-provisioning:
a.	Cài đặt Ansible
Sử dụng script: 
cd vtidc-infra-provisioning/docker-registry/install
./ansible.sh 

b.	Cài đặt DNS Server Local
		Khai báo các biến trong host_vars/dns:
		allow_networks: cho phép các network query dns
		cobblerhosts: phân giải hostname/domain sang IP
	
Sử dụng playbook dns.yml để cài đặt DNS server và thêm các bản ghi phân giải localdomain
		ansible-playbook dns.yml -v --tags dns
		ansible-playbook dns.yml -v --tags hosts

c.	Cài đặt Gateway local

	sed -i s/net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g /etc/sysctl.conf
	sysctl -p
		iptables -t nat -A POSTROUTING -o eno3 -j MASQUERADE

d.	Cấu hình network cho tất cả các server vật lý.
Playbook bao gồm việc cấu hình Bonding, Vlan, Static IP, Gateway, DNS Local domain. 
Khai báo các biến trong host_vars/tên-hostname. Tuỳ từng loại host sẽ có các interface khác nhau:
	
mgmt_if: 
name: tên interface management
Ip: địa chỉ IP của interface management
Dns: địa chỉ IP của DNS server
	Bond:
		If1: Tên interface 1 trong bond
		If2: Tên interface 2 trong bond
		Mac: Địa chỉ MAC của interface bond 
Cloudmgmt_if:
	Name: tên interface cloud management
	IP: địa chỉ IP của interface cloud management
Cephpublic_if:
	Name: tên interface ceph public
	IP: địa chỉ IP của interface ceph public
	Public_if:
	Name: tên interface public
	IP: địa chỉ IP public
Gw: Gateway của mạng Public

Sử dụng playbook infra.yml. 
ansible-playbook infra.yml -v --tags ip --limit hl-controller-1

e.	Cài Docker Registry – Sử dụng port 8443 trong Dockerfile nếu cài đặt docker registry trên controller
i.	Cài Docker Engine và Docker Compose sử dụng 2 script: 
cd vtidc-infra-provisioning/docker-registry/install
./docker-engine.sh
	./ docker-compose.sh

ii.	Tạo Docker Registry bằng Docker Compose:
		cd vtidc-infra-provisioning/docker-registry
docker-compose -f idc-registry.yml up -d

f.	Build docker image:
		Sử dụng project vtidc-openstack-docker
		Sửa login URL trong $img/Dockerfile
i.	Sử dụng script sau để build
		 for img in xenial keystone glance nova neutron cinder horizon ceilometer cinder-volume heat ironic masakari; do 
docker build -t hub.storebox.vn/"$i":pike "$i"/;
done

ii.	Login vào Docker Registry
		docker login hub.storebox.vn
		Nhập user, password để login

iii.	Push image lên Docker Registry
		Sử dụng script:
	 for img in xenial keystone glance nova neutron cinder horizon ceilometer cinder-volume heat ironic masakari; do 
docker push hub.storebox.vn/"$img":pike
done
1.	OpenStack Controller Infrastructure
Sử dụng playbook vtidc-infra-provisioning/controller.yml để triển khai hạ tầng cho OpenStack Controller. Khai báo các biến trong file group_vars/controller. 

INTERNAL_API_DOMAIN: internal-api.storebox.vn
ADMIN_API_DOMAIN: internal-api.storebox.vn
PUBLIC_API_DOMAIN: api.storebox.vn
DASHBOARD_DOMAIN: dashboard.storebox.vn
VNC_DOMAIN: vnc.storebox.vn
PUBLIC_API_IP: 171.244.48.4
INTERNAL_API_IP: 172.16.54.4
docker_hub:
  url: hub.storebox.vn

Sử dụng script group_vars/password.sh để sinh các password mạnh ngẫu nhiên.

1.	Cài đặt OpenStack repository
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags repo

2.	Cài đặt Keepalived
		ansible-playbook controller.yml -e @group_vars/password.yml -v --tags vip
		
3.	Cài đặt HAproxy
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags haproxy 

4.	Cài đặt Percona XtraDB và chạy Percona BootstrapDB
		ansible-playbook controller.yml -e @group_vars/password.yml -v --tags pxc
		ansible-playbook controller.yml -e @group_vars/password.yml -v --tags bootstrap

5.	Tạo các Databases
		ansible-playbook controller.yml -e @group_vars/password.yml -v --tags create-db
		 Trong trường gặp lỗi như dưới:
TASK [create-database : Create Keystone database] ************************************************************************************************************************
fatal: [pv-controller-1]: FAILED! => {"changed": false, "msg": "unable to connect to database, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (2003, \"Can't connect to MySQL server on 'localhost' ([Errno 111] Connection refused)\")"}
Thêm tham số: login_unix_socket: /var/run/mysqld/mysqld.sock vào trong các task tạo db và user db:

---
- name: Create nova_api database
  mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ nova_api_database_name }}"
    state: "present"
  ignore_errors: True

- name: Create nova_api database user
  mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ nova_api_database_username }}"
    password: "{{ nova_api_database_password }}"
    priv: "{{ nova_api_database_name }}.*:ALL"
    state: "present"
    host: "{{ item }}"
  with_items: "{{grant_hosts_nova}}"

6.	Cài đặt RabbitMQ Server
ansible-playbook controller.yml -e @group_vars/password.yml -v –tags rabbitmq
		
7.	Cài đặt docker-engine và docker-compose 
ansible-playbook controller.yml -e @group_vars/password.yml -v –tags docker-engine
		ansible-playbook controller.yml -e @group_vars/password.yml -v –tags docker-compose
8.	Tạo file docker-compose.yml
Sửa docker hub URL trong: roles/generate-compose/templates/docker-compose.yml.j2
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags generate-compose

9.	Login và Run Docker
Lấy auth_token trong: ~/.docker/config.json và thêm vào trong group_vars/password.yml biến DOCKER_HUB_TOKEN
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags docker-login
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags docker-run
Nếu Faild thì login docker sau đó chạy manual trên node

10.	Cài đặt NTP server và Memcached
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags ntp-server
ansible-playbook controller.yml -e @group_vars/password.yml -v --tags memcached

2.	Ceph Storage Deployment
2.1.	Triển khai Ceph cluster
2.1.1.	Cài đặt Ceph Deploy
wget -q -O- 'https://download.ceph.com/keys/release.asc' | apt-key add -
echo deb https://download.ceph.com/debian-luminous/ $(lsb_release -sc) main | tee /etc/apt/sources.list.d/ceph.list
apt update
apt install ceph-deploy -y

2.1.2.	Tạo Ceph cluster
ceph-deploy new hl-ceph-04 hl-ceph-05 hl-ceph-06

2.1.3.	Cấu hình phân chia public và cluster network
Sửa file /etc/ceph/ceph.conf thêm vào 2 dòng 
public network = 10.10.10.0/24
cluster network = 10.10.20.0/24

2.1.4.	Cài đặt Ceph package
ceph-deploy install --release luminous hl-ceph-04 hl-ceph-05 hl-ceph-06

2.1.5.	Khởi tạo Ceph Monitor
ceph-deploy mon create-initial

2.1.6.	Copy file cấu hình và admin key 
ceph-deploy admin hl-ceph-04 hl-ceph-05 hl-ceph-06

2.1.7.	Tạo manager daemon
ceph-deploy mgr create hl-ceph-04

2.1.8.	Tạo Ceph OSD
ceph-deploy osd prepare --bluestore hl-ceph-04:/dev/sdb
ceph-deploy osd activate hl-ceph-04:/dev/sdb1

ceph-deploy osd prepare --bluestore hl-ceph-05:/dev/sdb
ceph-deploy osd activate hl-ceph-05:/dev/sdb1

ceph-deploy osd prepare --bluestore hl-ceph-06:/dev/sdb
ceph-deploy osd activate hl-ceph-06:/dev/sdb1

2.1.9.	Kiểm tra trạng thái Ceph Cluster
ceph health
HEALTH_OK


2.2.	Tạo Ceph pool
2.2.1.	Tạo pool cho Glance image
ceph osd pool create glance_image 128 128 replicated
ceph auth get-or-create client.glance mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=glance_image

2.2.2.	Tạo pool cho Cinder volume
2.2.3.	Tạo pool cho Cinder backup
2.2.4.	Tạo pool cho Gnocchi metric

4.	OpenStack Core Service Deployment
Sử dụng project vtidc-openstack-playbook, khai báo các biến
Trong file group_vars/all:  
INTERNAL_API_DOMAIN: internal-api.storebox.vn
ADMIN_API_DOMAIN: internal-api.storebox.vn
PUBLIC_API_DOMAIN: api.storebox.vn
PUBLIC_API_IP: 171.244.48.4
INTERNAL_API_IP: 172.16.54.4
	
	OPENSTACK_REGION_NAME: Hoa-Lac
	RABBIT_HOSTS: hostname
	dc: hl
	dns_nameservers: 172.16.53.7

Generate password trong file group_vars/password.yml
4.1	Controller node
		Lần lượt cấu hình cho các service:
		Keystone
		ansible-playbook container.yml -e @group_vars/password.yml -v --tags keystone
		Create service endpoint
ansible-playbook container.yml -e @group_vars/password.yml -v --tags create-service-endpoint --limit pv-keystone-1 (chỉ cần chạy trên một node controller) 
Glance
ansible-playbook container.yml -e @group_vars/password.yml -v --tags glance
Nova
ansible-playbook container.yml -e @group_vars/password.yml -v --tags nova
Neutron
ansible-playbook container.yml -e @group_vars/password.yml -v --tags neutron
Cinder
ansible-playbook container.yml -e @group_vars/password.yml -v --tags cinder
Horizon
Trước khi chạy tag horizon, git clone Pannel mới nhất của fwaas-dashboard và vpnaas-dashboard, để thay thế Pannel cũ trong role/horizon/files
git clone -b stable/pike https://github.com/openstack/neutron-vpnaas-dashboard.git
git clone -b stable/pike https://github.com/openstack/neutron-fwaas-dashboard.git
Tiến hành Replace cả hai file cũ: _7010_project_firewalls_panel.py và _7100_project_vpn_panel.py bằng file mới.
ansible-playbook container.yml -e @group_vars/password.yml -v --tags horizon
Truy cập vào Horizon container, chạy file manage.py để tạo tables cho DB dash:
/usr/share/openstack-dashboard/manage.py syncdb
Heat
ansible-playbook container.yml -e @group_vars/password.yml -v --tags heat
Masakari
ansible-playbook container.yml -e @group_vars/password.yml -v --tags masakari
Ceilometer
ansible-playbook container.yml -e @group_vars/password.yml -v --tags ceilometer
4.2	Network node
ansible-playbook network.yml -e @group_vars/password.yml -v --tags repo  
ansible-playbook network.yml -e @group_vars/password.yml -v --tags neutron
ansible-playbook network.yml -e @group_vars/password.yml -v --tags ovs-br

4.3	Compute node
ansible-playbook compute.yml -e @group_vars/password.yml -v --tags repo
ansible-playbook compute.yml -e @group_vars/password.yml -v --tags nova
ansible-playbook compute.yml -e @group_vars/password.yml -v --tags neutron
ansible-playbook compute.yml -e @group_vars/password.yml -v --tags ovs-br
ansible-playbook compute.yml -e @group_vars/password.yml -v --tags cinder

4.4	Cloud initialization
4.4.1	Create role user
openstack role create user
4.4.2	Upload Glance Image 
4.4.3	Create Provider, Tenant network
4.4.4	Create Nova Flavor
4.4.5	Create Cinder Volume type
4.4.6	Launch test instance
	
5.	OpenStack Additional Service Deployment
5.1	Gnocchi
5.2	Ceilometer
5.3	Ironic

6.	Sub-system Deployment
6.1	Log System
6.1.1	Beaver
6.1.2	Redis
6.1.3	ELK

6.2	Monitor, Alert System
6.2.1	Icinga2
6.2.2	Nagios NRPE

6.3	Metric
6.3.1	Diamond, collectd
6.3.2	InfluxDB
6.3.3	Gnafana
